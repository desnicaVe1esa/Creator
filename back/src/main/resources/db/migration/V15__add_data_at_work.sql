insert into work (publication_date, info)
values ('2024-06-21', 'Jenkins. Если необходимо перезапускать джобу при пуше определенной ветки, то:\nПереходим в нужную джобу -> Configure(General) -> Build Triggers -> Ставим галочку на Generic Webhook Trigger -> Optional filter -> Вводим регулярное выражение с названием нужной ветки в поле Expression(Пример: "^refs/heads/(master|dev|<your_branch>". Джоба пересоберется после пуша в master или dev или <your_branch>)\nПолезно использовать при фиксе багов или тестировании нового функционала до вывода на промышленный стенд, но при этом прочувствовать все вытекающие последстсвия сборки, т.к. могут подтянуться дополнительные сервисы типа прокси и вносить изменения в функционал проекта\nПример:\nСтраница, где есть названия компаний. Под названием компании должна появляться картинка. На фронте в коде стояла проверка на наличие картинки на сервере и, если картинки нет, то вернуть 401 ошибку и поставить на это место пустую картинку. На локал хосте все отрабатывало корректно, но при выводе на другие стенды, к которым был подключен прокси кибербезы проверка не проходила по причине того, что прокси проверял сертификат и при успешной проверке вешал 200 на все данные на сервере');

update home_practice
set info = 'Java. При решении алгоритмической задачи принял решение посчитать количество повторяющихся элементов в ArrayList так, чтобы потом можно было вывести строку согласно условию задачи. Нашел интересный вариант:\n
        List<Map.Entry<Integer, Long>> preparedForResult = primes\n
                .stream()\n
                .collect(Collectors.toMap(Function.identity(), v -> 1L, Long::sum))\n
                .entrySet().stream()\n
                .sorted(Map.Entry.comparingByKey()).toList()\n
        где Map.Entry - интерфейс, который представляет собой элемент пары ключ-значение в ассоциативном массиве (map). Используется для доступа к элементам пары без необходимости знать конкретный класс, который реализует интерфейс Map\n
        Function.identity() - возвращает элемент потока как есть (ключ)\n
        v -> 1L - преобразует каждое значение в 1L (изначально предполагается, что каждое число встречается ровно один раз)\n
        Long::sum - суммирует все значения для одного ключа (если одно и то же простое число встретится несколько раз, его счетчик увеличится)\n
        entrySet() - получение набора всех элементов Map, каждый из которых является экземпляром Map.Entry\n'
where id = 24;

update work
set info = 'Maven. Если возникают конфликты с безопасностью при получении зависимостей, то поможет команда:\n
                       mvn clean install -DskipTests -Dmaven.wagon.http.ssl.insecure=true -Dmaven.wagon.http.ssl.allowall=true -Dmaven.wagon.http.ssl.ignore.validity.dates=true -U, где:\n
                       - mvn - сокращение от "maven", которое указывает на использование Apache Maven для выполнения команды\n
                       - clean - удаляет все временные файлы, созданные в процессе сборки проекта\n
                       - install - устанавливает пакеты проекта в локальный репозиторий Maven пользователя\n
                       - -DskipTests - флаг, который указывает Maven пропустить выполнение тестов сборки. Это может быть полезно, если нужно ускорить процесс сборки или если тесты занимают слишком много времени\n
                       - -Dmaven.wagon.http.ssl.insecure=true - флаг позволяет Maven игнорировать проблемы безопасности при взаимодействии с HTTPS-серверами, которые не имеют действительных сертификатов SSL/TLS. Это может быть полезно, если работа выполняеся с непроверенными или самоподписанными сертификатами\n
                       - -Dmaven.wagon.http.ssl.allowall=true - флаг позволяет Maven принимать все сертификаты SSL/TLS без проверки их подлинности. Это может быть опасно, так как это может привести к установке несанкционированных пакетов\n
                       - -Dmaven.wagon.http.ssl.ignore.validity.dates=true - флаг позволяет Maven игнорировать дату истечения срока действия сертификата SSL/TLS. Это может быть полезно, если идет работа с сертификатами, срок действия которых истек или еще не начался\n
-                      -U - флаг указывает Maven обновить зависимости перед сборкой, даже если они уже установлены в локальном репозитории. Это может быть полезно, если вы нужно убедиться, что используются самые последние версии зависимостей'
where id = 11;

update home_practice
set info = 'Git. Отключить автоматическое преобразование символов новой строки (CRLF):\n' ||
                      'git config --global core.autocrlf false\n' ||
                      'При установке значения "false", Git не будет автоматически изменять символы новой строки при коммитах ' ||
                      'и проверках кода. Это может быть полезно, если работа идет на разных операционных системах, где используются различные ' ||
                      'символы новой строки\n' ||
                      'Пример использования при ошибке:\n' ||
                      'warning: in the working copy of "bla-bla-bla", LF will be replaced by CRLF the next time Git touches it'
where id = 18;

update home_practice
set info = 'Если не получается удалить файл/папку (не дает система), то необходимо переключиться на "Безопасный режим" и удалить файл/папку'
where id = 3;

update home_practice
set info = 'Git. Возвращение кода из предыдущего коммита:\n1. git log - список коммитов;\n2. git reset --hard <SHA-хэш> - вернет состояние, которое было в этом коммите (процесс необратим)'
where id = 2;